// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Touristando.Models;

namespace RecodeViagens.Migrations
{
    [DbContext(typeof(DataModel))]
    [Migration("20211220160506_Migra")]
    partial class Migra
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Touristando.Models.Customer", b =>
                {
                    b.Property<int>("id_customer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_customer");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Touristando.Models.Transit", b =>
                {
                    b.Property<int>("id_transit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("origin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.HasKey("id_transit");

                    b.ToTable("Transit");
                });

            modelBuilder.Entity("Touristando.Models.Travel", b =>
                {
                    b.Property<int>("id_travel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("customerId")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tickets")
                        .HasColumnType("int");

                    b.Property<int>("transitId")
                        .HasColumnType("int");

                    b.HasKey("id_travel");

                    b.HasIndex("customerId");

                    b.HasIndex("transitId");

                    b.ToTable("Travel");
                });

            modelBuilder.Entity("Touristando.Models.Travel", b =>
                {
                    b.HasOne("Touristando.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("customerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Touristando.Models.Transit", "Transit")
                        .WithMany()
                        .HasForeignKey("transitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Transit");
                });
#pragma warning restore 612, 618
        }
    }
}
